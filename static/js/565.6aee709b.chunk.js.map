{"version":3,"file":"static/js/565.6aee709b.chunk.js","mappings":"sKAAO,IAAMA,EAAmB,iC,6LCEhCC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADjC,cACzBK,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAc,mCAAG,WAAOD,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADpC,cACtBK,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdK,EAAiB,mCAAG,WAAOC,EAAOV,GAAd,gFAC/BW,QAAQC,IAAI,qBACNX,EAAU,CAACC,OAAQF,EAAWE,QAFL,SAGRL,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEY,EAAlE,WAAkFT,GAH1E,cAGzBE,EAHyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,wDAOjBQ,EAAc,mCAAG,WAAON,EAAIP,GAAX,gFAC5BW,QAAQC,IAAI,kBACNX,EAAU,CAACC,OAAQF,EAAWE,QAFR,SAGLL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,GAAWG,GAHvC,cAGtBE,EAHsB,yBAIrBA,EAASC,MAJY,2CAAH,uD,2IC1BdU,EAASC,EAAAA,GAAAA,IAAH,2JAQNC,EAAeD,EAAAA,GAAAA,IAAH,2IAUZE,EAAaF,EAAAA,GAAAA,IAAH,yG,SCkBvB,MA/BA,WACI,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAQP,OANAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBH,GAASI,MAAK,SAACrB,GAAD,OAAUgB,EAAWhB,EAAKC,QAA1B,GACrC,GAAE,CAACgB,IAENV,QAAQC,IAAIO,IAEM,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASO,QAAS,GACjB,wBACDP,EAAQQ,KAAI,YAAuE,IAApEpB,EAAmE,EAAnEA,GAAIqB,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,QAAwCC,EAAe,EAA9CC,eAAkBC,YAE/C,OADArB,QAAQC,IAAIkB,IACL,yBACK,UAACb,EAAD,YACI,UAACD,EAAD,YACI,SAACF,EAAD,CAAQmB,IAA6B,WAAlB,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQI,MAAM,EAAG,IACxBJ,EAAOI,MAAM,EAAGJ,EAAOJ,QADhB,UAEJ9B,EAAAA,GAFI,OAEekC,GACxBK,IAAKP,KACT,wBAAKA,QAET,uBAAIC,QATJtB,EAYnB,OAEH,uCACb,C","sources":["api/imageDefaultLink.js","api/movies-api.js","components/Reviews/ReviewsStyled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const imageDefaultLink = \"https://image.tmdb.org/t/p/w500\";","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const fetchMovieDetails = async (query, controller) => {\n  console.log(\"fetchMovieDetails\");\n  const options = {signal: controller.signal };\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id, controller) => {\n  console.log(\"fetchMovieById\");\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchGenres = async () => {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response.data.results;\n}","import styled from 'styled-components';\n\nexport const Avatar = styled.img`\n   width: 70px;\n    height: 70px;\n    border-radius: 50%;\n    background-repeat: no-repeat;\n    \n    background-size: cover;\n`;\nexport const AuthorReview = styled.div`\n     display: flex;\n    align-items: center;\n    > h3 {\n    margin-left: 20px;\n}\n> p {\ntext-align: left;\n}\n`;\nexport const CardReview = styled.div`\nmargin-top: 50px;\nborder: 1px solid grey;\npadding: 10px;\nborder-radius: 5px;\n`;\n\n","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { imageDefaultLink } from '../../api/imageDefaultLink';\nimport * as api from '../../api/movies-api';\nimport {CardReview, AuthorReview, Avatar} from './ReviewsStyled'\n\n\nfunction Reviews () {\n    const [reviews, setReviews] = useState(null);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n      api.fetchMovieReviews(movieId).then((data) => setReviews(data.results));\n    }, [movieId])   \n  \n  console.log(reviews);\n    \n    return  (reviews?.length > 0\n            ? <ul>\n            {reviews.map(({ id, author, content, author_details: { avatar_path: avatar } }) => {     \n                    console.log(avatar)\n                    return <li key={id}>\n                                <CardReview >\n                                    <AuthorReview>\n                                        <Avatar src={avatar?.slice(1, 6) === \"https\"\n                                            ? avatar.slice(1, avatar.length)\n                                            : `${imageDefaultLink}${avatar}`}\n                                            alt={author} />\n                                        <h3>{author}</h3>\n                                    </AuthorReview>\n                                    <p>{content}</p>\n                                </CardReview>\n                            </li>\n                })}\n            </ul>\n            : <div>No reviews</div>)       \n}\n\nexport default Reviews;"],"names":["imageDefaultLink","axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","fetchMovieDetails","query","console","log","fetchMovieById","Avatar","styled","AuthorReview","CardReview","useState","reviews","setReviews","movieId","useParams","useEffect","api","then","length","map","author","content","avatar","author_details","avatar_path","src","slice","alt"],"sourceRoot":""}