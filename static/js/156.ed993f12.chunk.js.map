{"version":3,"file":"static/js/156.ed993f12.chunk.js","mappings":"sKAAO,IAAMA,EAAmB,iC,qKCE1BC,EAAMC,EAAAA,GAAAA,OAAa,CACvBC,QAAS,mCACTC,KAAM,OACNC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAOdC,EAAU,mCAEHC,EAAkB,mCAAG,6FAC1BC,EAAc,CAClBC,MAAO,KACPC,KAAM,OACNC,KAAM,MAERC,QAAQC,IAAI,sBANoB,SAQTb,EAAIc,IAAJ,iBAA0B,CAAEC,OAAQP,IAR3B,cAQ1BQ,EAR0B,OAShCJ,QAAQC,IAAIG,EAASC,MATW,kBAUzBD,EAASC,KAAKC,SAVW,2CAAH,qDAalBC,EAAiB,mCAAG,WAAOC,EAAIC,GAAX,gFACzBC,EAAU,CAAEC,OAAQF,EAAWE,QADN,SAERtB,EAAAA,GAAAA,IAAA,gBACZmB,EADY,4BACUd,GAC/BgB,GAJ6B,cAEzBN,EAFyB,yBAMxBA,EAASC,MANe,2CAAH,wDASjBO,EAAc,mCAAG,WAAOJ,EAAIC,GAAX,gFACtBC,EAAU,CAAEC,OAAQF,EAAWE,QADT,SAELtB,EAAAA,GAAAA,IAAA,gBACZmB,EADY,4BACUd,GAC/BgB,GAJ0B,cAEtBN,EAFsB,yBAMrBA,EAASC,MANY,2CAAH,wDAkBdQ,EAAc,mCAAG,WAAOL,EAAIC,GAAX,gFACtBC,EAAU,CAAEC,OAAQF,EAAWE,QADT,SAELtB,EAAAA,GAAAA,IAAA,gBAAmBmB,EAAnB,oBAAiCd,GAAWgB,GAFvC,cAEtBN,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,uD,qJCrDdS,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gPAYVE,EAAOF,EAAAA,GAAAA,GAAH,+T,6DCNJG,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMb,EAAa,IAAIc,gBAIvB,OAHAC,EAAAA,GAAuBf,GAAYgB,MAAK,SAAAL,GAAM,OAAIC,EAAUD,EAAd,IAAuBM,OAAM,SAAAC,GACzEC,IAAAA,OAAAA,QAAA,2FAA2CD,EAAME,SAAW,CAAEC,SAAU,aAAcC,UAAW,KACpG,IACQ,WACLtB,EAAWuB,OACZ,CAGF,CAFC,MAAOL,GACP3B,QAAQC,IAAK0B,EACd,CAGF,GAAE,IAEEP,EAIL,OACE,UAACa,EAAA,EAAD,YACE,0CACA,SAAChB,EAAD,UACGG,EAAOc,KAAI,YAAwC,IAArC1B,EAAoC,EAApCA,GAAI2B,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACrC,OACE,UAACvB,EAAD,CAAqBwB,GAAE,kBAAa9B,GAAM6B,MAAOA,EAAjD,WACE,gBACEE,IACEH,EAAW,UAAMjD,EAAAA,GAAN,OAAyBiD,GAAgBI,EAEtDC,IAAKN,KAEP,wBAAKA,MAPU3B,EAUpB,QAIR,EACD,G","sources":["api/imageDefaultLink.js","api/movies-api.js","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const imageDefaultLink = \"https://image.tmdb.org/t/p/w500\";","import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'http://185.233.118.244:8080/user',\n  mode: 'cors',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n\n  // baseURL: \"http://localhost:8080/user\",\n});\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n\nexport const fetchPopularMovies = async () => {\n  const bodyRequest = {\n    month: '03',\n    type: 'done',\n    year: 2023,\n  };\n  console.log('fetchPopularMovies');\n  // const options = { signal: controller.signal };\n  const response = await API.get(`/api/finances/`, { params: bodyRequest });\n  console.log(response.data);\n  return response.data.results;\n};\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const options = { signal: controller.signal };\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async (id, controller) => {\n  const options = { signal: controller.signal };\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async (query, controller) => {\n  const options = { signal: controller.signal };\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`,\n    options\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async (id, controller) => {\n  const options = { signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n};\n\nexport const fetchGenres = async controller => {\n  const options = { signal: controller.signal };\n  const response = await axios.get(\n    `genre/movie/list?api_key=${API_KEY}`,\n    options\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid;\n  border-radius: 10px;\n  list-style: none;\n  text-decoration: none;\n  box-shadow: 0px 0px 20px 1px blanchedalmond;\n  &:hover {\n    color: orangered;\n  }\n`;\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n  > img {\n    width: 100%;\n    height: auto;\n  }\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { StyledLink, List } from './HomePage.styled';\nimport * as Api from '../../api/movies-api';\nimport Notiflix from 'notiflix';\nimport { imageDefaultLink } from '../../api/imageDefaultLink';\nimport { Container } from '../../components/Container/Container';\nimport defaultImg from '../../img/portrait_placeholder.png';\nimport PropTypes from 'prop-types';\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      const controller = new AbortController();\n      Api.fetchPopularMovies(controller).then(movies => setMovies(movies)).catch(error => {\n        Notiflix.Notify.failure(`Ошибка запроса: ${error.message}`, { position: \"top-center\", autoClose: 2000 } ); \n    });\n      return () => {\n        controller.abort();\n      };\n    } catch (error) {\n      console.log((error));\n    }\n    \n      \n  }, []);\n\n  if (!movies) {\n    return;\n  }\n\n  return (\n    <Container>\n      <h1>Trending now</h1>\n      <List>\n        {movies.map(({ id, title, poster_path, state }) => {\n          return (\n            <StyledLink key={id} to={`/movies/${id}`} state={state}>\n              <img\n                src={\n                  poster_path ? `${imageDefaultLink}${poster_path}` : defaultImg\n                }\n                alt={title}\n              />\n              <h3>{title}</h3>\n            </StyledLink>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\nexport default HomePage;\n\nHomePage.propTypes = {\n  movies: PropTypes.array,\n};\n"],"names":["imageDefaultLink","API","axios","baseURL","mode","headers","Accept","API_KEY","fetchPopularMovies","bodyRequest","month","type","year","console","log","get","params","response","data","results","fetchMovieReviews","id","controller","options","signal","fetchMovieCast","fetchMovieById","StyledLink","styled","Link","List","HomePage","useState","movies","setMovies","useEffect","AbortController","Api","then","catch","error","Notiflix","message","position","autoClose","abort","Container","map","title","poster_path","state","to","src","defaultImg","alt"],"sourceRoot":""}