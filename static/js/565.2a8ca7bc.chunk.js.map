{"version":3,"file":"static/js/565.2a8ca7bc.chunk.js","mappings":"sKAAO,IAAMA,EAAmB,iC,6LCEhCC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,EAAIP,GAAX,gFACzBC,EAAU,CAACC,OAAQF,EAAWE,QADL,SAERL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,GAAWG,GAF5C,cAEzBE,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,wDAMjBI,EAAc,mCAAG,WAAOD,EAAIP,GAAX,gFACtBC,EAAU,CAACC,OAAQF,EAAWE,QADR,SAELL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,GAAWG,GAF/C,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,wDAMdK,EAAiB,mCAAG,WAAOC,EAAOV,GAAd,gFACzBC,EAAU,CAACC,OAAQF,EAAWE,QADL,SAERL,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEY,EAAlE,WAAkFT,GAF1E,cAEzBE,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,wDAMjBM,EAAc,mCAAG,WAAOJ,EAAIP,GAAX,gFACtBC,EAAU,CAACC,OAAQF,EAAWE,QADR,SAELL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,GAAWG,GAFvC,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,uD,6JC3BdQ,EAASC,EAAAA,GAAAA,IAAH,2JAQNC,EAAeD,EAAAA,GAAAA,IAAH,2IAUZE,EAAaF,EAAAA,GAAAA,IAAH,yG,SCgCvB,MA7CA,WACE,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACR,IAAMrB,EAAa,IAAIsB,gBAIvB,OAHAC,EAAAA,GAAsBJ,EAASnB,GAAYwB,MAAK,SAAApB,GAAI,OAAIc,EAAWd,EAAKC,QAApB,IAA8BoB,OAAM,SAAAC,GACpFC,IAAAA,OAAAA,QAAA,2FAA2CD,EAAME,SAAW,CAAEC,SAAU,aAAcC,UAAW,KACpG,IACM,WACL9B,EAAW+B,OACZ,CACF,GAAE,CAACZ,KAGU,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,GACvB,wBACGf,EAAQgB,KACP,YAAuE,IAApE1B,EAAmE,EAAnEA,GAAI2B,EAA+D,EAA/DA,OAAQC,EAAuD,EAAvDA,QAAwCC,EAAe,EAA9CC,eAAkBC,YACxC,OACE,yBACE,UAACvB,EAAD,YACE,UAACD,EAAD,YACE,SAACF,EAAD,CACE2B,IAC0B,WAAlB,OAANH,QAAM,IAANA,OAAA,EAAAA,EAAQI,MAAM,EAAG,IACbJ,EAAOI,MAAM,EAAGJ,EAAOJ,QAD3B,UAEOpC,EAAAA,GAFP,OAE0BwC,GAE5BK,IAAKP,KAEP,wBAAKA,QAEP,uBAAIC,QAbC5B,EAiBZ,OAIL,uCAEH,C","sources":["api/imageDefaultLink.js","api/movies-api.js","components/Reviews/ReviewsStyled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["export const imageDefaultLink = \"https://image.tmdb.org/t/p/w500\";","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchMovieCast = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchMovieDetails = async (query, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchGenres = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`, options);\n  return response.data.results;\n}","import styled from 'styled-components';\n\nexport const Avatar = styled.img`\n   width: 70px;\n    height: 70px;\n    border-radius: 50%;\n    background-repeat: no-repeat;\n    \n    background-size: cover;\n`;\nexport const AuthorReview = styled.div`\n     display: flex;\n    align-items: center;\n    > h3 {\n    margin-left: 20px;\n}\n> p {\ntext-align: left;\n}\n`;\nexport const CardReview = styled.div`\nmargin-top: 50px;\nborder: 1px solid grey;\npadding: 10px;\nborder-radius: 5px;\n`;\n\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { imageDefaultLink } from '../../api/imageDefaultLink';\nimport Notiflix from 'notiflix';\nimport * as api from '../../api/movies-api';\nimport { CardReview, AuthorReview, Avatar } from './ReviewsStyled';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    api.fetchMovieReviews(movieId, controller).then(data => setReviews(data.results)).catch(error => {\n        Notiflix.Notify.failure(`Ошибка запроса: ${error.message}`, { position: \"top-center\", autoClose: 2000 } ); \n    });;\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n \n  return reviews?.length > 0 ? (\n    <ul>\n      {reviews.map(\n        ({ id, author, content, author_details: { avatar_path: avatar } }) => {\n          return (\n            <li key={id}>\n              <CardReview>\n                <AuthorReview>\n                  <Avatar\n                    src={\n                      avatar?.slice(1, 6) === 'https'\n                        ? avatar.slice(1, avatar.length)\n                        : `${imageDefaultLink}${avatar}`\n                    }\n                    alt={author}\n                  />\n                  <h3>{author}</h3>\n                </AuthorReview>\n                <p>{content}</p>\n              </CardReview>\n            </li>\n          );\n        }\n      )}\n    </ul>\n  ) : (\n    <div>No reviews</div>\n  );\n}\n\nexport default Reviews;\n"],"names":["imageDefaultLink","axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","fetchMovieDetails","query","fetchMovieById","Avatar","styled","AuthorReview","CardReview","useState","reviews","setReviews","movieId","useParams","useEffect","AbortController","api","then","catch","error","Notiflix","message","position","autoClose","abort","length","map","author","content","avatar","author_details","avatar_path","src","slice","alt"],"sourceRoot":""}