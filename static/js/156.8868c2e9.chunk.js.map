{"version":3,"file":"static/js/156.8868c2e9.chunk.js","mappings":"sKAAO,IAAMA,EAAmB,iC,6LCEhCC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,EAAIP,GAAX,gFACzBC,EAAU,CAACC,OAAQF,EAAWE,QADL,SAERL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,GAAWG,GAF5C,cAEzBE,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,wDAMjBI,EAAc,mCAAG,WAAOD,EAAIP,GAAX,gFACtBC,EAAU,CAACC,OAAQF,EAAWE,QADR,SAELL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,GAAWG,GAF/C,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,wDAMdK,EAAiB,mCAAG,WAAOC,EAAOV,GAAd,gFACzBC,EAAU,CAACC,OAAQF,EAAWE,QADL,SAERL,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEY,EAAlE,WAAkFT,GAF1E,cAEzBE,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,wDAMjBM,EAAc,mCAAG,WAAOJ,EAAIP,GAAX,gFACtBC,EAAU,CAACC,OAAQF,EAAWE,QADR,SAELL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,GAAWG,GAFvC,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,uD,sJC1BdQ,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gPAYVE,EAAOF,EAAAA,GAAAA,GAAH,+T,2CCPJG,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMpB,EAAa,IAAIqB,gBAEvB,OADAC,EAAAA,GAAuBtB,GAAYuB,MAAK,SAAAL,GAAM,OAAIC,EAAUD,EAAd,IACvC,WACLlB,EAAWwB,OACZ,CAGF,CAFC,MAAOC,GACPC,QAAQC,IAAKF,EACd,CAGF,GAAE,IAEEP,EAIL,OACE,UAACU,EAAA,EAAD,YACE,0CACA,SAACb,EAAD,UACGG,EAAOW,KAAI,YAAwC,IAArCtB,EAAoC,EAApCA,GAAIuB,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACrC,OACE,UAACpB,EAAD,CAAqBqB,GAAE,kBAAa1B,GAAMyB,MAAOA,EAAjD,WACE,gBACEE,IACEH,EAAW,UAAMnC,EAAAA,GAAN,OAAyBmC,GAAgBI,EAEtDC,IAAKN,KAEP,wBAAKA,MAPUvB,EAUpB,QAIR,EACD,G","sources":["api/imageDefaultLink.js","api/movies-api.js","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const imageDefaultLink = \"https://image.tmdb.org/t/p/w500\";","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchMovieCast = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchMovieDetails = async (query, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchGenres = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`, options);\n  return response.data.results;\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n  padding: 10px;\n  border: 1px solid;\n  border-radius: 10px;\n  list-style: none;\n  text-decoration: none;\n  box-shadow: 0px 0px 20px 1px blanchedalmond;\n  &:hover {\n    color: orangered;\n  }\n`;\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n  > img {\n    width: 100%;\n    height: auto;\n  }\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media (min-width: 1200px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { StyledLink, List } from './HomePage.styled';\nimport * as Api from '../../api/movies-api';\nimport { imageDefaultLink } from '../../api/imageDefaultLink';\nimport { Container } from '../../components/Container/Container';\nimport defaultImg from '../../img/portrait_placeholder.png';\nimport PropTypes from 'prop-types';\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    try {\n      const controller = new AbortController();\n      Api.fetchPopularMovies(controller).then(movies => setMovies(movies));\n      return () => {\n        controller.abort();\n      };\n    } catch (error) {\n      console.log((error));\n    }\n    \n      \n  }, []);\n\n  if (!movies) {\n    return;\n  }\n\n  return (\n    <Container>\n      <h1>Trending now</h1>\n      <List>\n        {movies.map(({ id, title, poster_path, state }) => {\n          return (\n            <StyledLink key={id} to={`/movies/${id}`} state={state}>\n              <img\n                src={\n                  poster_path ? `${imageDefaultLink}${poster_path}` : defaultImg\n                }\n                alt={title}\n              />\n              <h3>{title}</h3>\n            </StyledLink>\n          );\n        })}\n      </List>\n    </Container>\n  );\n};\nexport default HomePage;\n\nHomePage.propTypes = {\n  movies: PropTypes.array,\n};\n"],"names":["imageDefaultLink","axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","fetchMovieDetails","query","fetchMovieById","StyledLink","styled","Link","List","HomePage","useState","movies","setMovies","useEffect","AbortController","Api","then","abort","error","console","log","Container","map","title","poster_path","state","to","src","defaultImg","alt"],"sourceRoot":""}