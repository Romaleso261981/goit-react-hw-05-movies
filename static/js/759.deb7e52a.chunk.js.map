{"version":3,"file":"static/js/759.deb7e52a.chunk.js","mappings":"6SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,oGACTF,EAAAA,GAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qDAKlBC,EAAiB,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,GAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBG,EAAc,mCAAG,WAAOD,GAAP,uFACLP,EAAAA,GAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,IADpC,cACtBE,EADsB,yBAErBA,EAASC,KAAKK,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAOC,GAAP,uFACRX,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEU,EAAlE,YADQ,cACzBR,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBO,EAAc,mCAAG,WAAOL,GAAP,uFACLP,EAAAA,GAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,IAD5B,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD,6KCvBdS,EAASC,EAAAA,GAAAA,OAAH,4T,SCCNC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACI,+BACA,kBAAMC,SAZW,SAAAC,GACjBA,EAAEC,iBAEF,IAAMX,EAAQO,EAAMK,OAChBZ,IACJK,EAASL,GACTQ,EAAS,IAEZ,EAIG,WACA,kBAAOK,KAAK,OAAON,MAAOA,EAAOO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,MAAtB,KAC5C,SAACL,EAAD,CAAQW,KAAK,SAAb,wBAIP,ECTYG,GAZQb,EAAAA,GAAAA,MAAH,yPAYQA,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,gJASVe,EAAkBf,EAAAA,GAAAA,IAAH,6CChBfgB,EAAa,WACtB,OAA4Bb,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAgBX,OATNC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACN3B,EAAK,UAAGuB,EAAaK,IAAI,gBAApB,QAAgC,GACvC5B,GACA6B,EAAAA,GAAsB7B,GACrB8B,MAAK,SAAAV,GAAM,OAAIC,EAAUD,EAAd,GAEnB,GACC,CAACG,KAGK,UAACL,EAAD,YACI,SAACd,EAAD,CAAWC,SAfF,SAAAE,GACjBiB,EAAgB,CAAExB,MAAOO,GAC5B,IAcQa,EAAOW,OAAS,IACb,wBACCX,EAAOY,KAAI,gBAAEpC,EAAF,EAAEA,GAAIqC,EAAN,EAAMA,MAAN,OACR,yBACH,SAACjB,EAAD,CAAYkB,GAAE,UAAKtC,GAAMuC,MAAO,CAAEC,KAAMX,GAAxC,SACEQ,KAFUrC,EADD,QAWvB,EAEL,G","sources":["api/movies-api.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport const fetchMovieCast = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport const fetchMovieDetails = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id) => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const fetchGenres = async () => {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response.data.results;\n}","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    font-size: 18px;\n    padding: 7px 12px;\n    margin-left: 10px;\n    background-color: orangered;\n    border: 0;\n    border-radius: 4px;\n    color: white;\n    cursor: pointer;\n    transition: background-color linear 250ms;\n    &:hover {\n        background-color: #c20a4e;\n    }\n`;","import { useState } from 'react';\nimport {Button} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSearch }) => {\n    const [value, setValue] = useState('');\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n    \n        const query = value.trim();\n        if (query) {\n        onSearch(query);\n        setValue('');\n        }\n    };\n    \n    return (\n        <>\n        <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={value} onChange={e => setValue(e.target.value)} />\n        <Button type=\"submit\">Search</Button>\n        </form>\n        </>\n    );\n}\n    \nexport default SearchBar;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Input = styled.input`\n    padding: 5px 10px;\n    font-size: 16px;\n    outline: 0px solid #e30b5c;\n    border-radius: 4px;\n    transition: border-color linear 250ms;\n     &:focus {\n        outline: 0;\n        border-color: #e30b5c;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    color: #000;\n    font-size: 1.2rem;\n    text-decoration: none;\n    &:hover {\n        color: orangered;\n    }\n`;\n\nexport const SearchContainer = styled.div`\n    display: block;\n`;","import { useState, useEffect} from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport * as Api from '../../api/movies-api';\nimport {SearchBar} from '../../components/SearchBar/SearchBar';\nimport {StyledLink, SearchContainer} from './MoviesPage.styled';\nimport PropTypes from 'prop-types';\n\n\nexport const MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n  \n\n    const handleSearch = value => {\n        setSearchParams({ query: value });\n    }\n        \n    useEffect(() => {\n        const query = searchParams.get('query') ?? '';\n        if (query) {\n            Api.fetchMovieDetails(query)\n            .then(movies => setMovies(movies));\n        }\n    }\n    , [searchParams]);\n\n          return (\n            <SearchContainer>\n                <SearchBar onSearch={handleSearch} />\n            {movies.length > 0 && (\n                <ul>\n                {movies.map(({id, title}) => (\n                    <li key={id}>\n                 <StyledLink to={`${id}`} state={{ from: location }}>\n                  {title}\n                </StyledLink>\n                    </li> \n                ))}\n                </ul>\n            )}  \n            </SearchContainer>\n        );\n    }\n\nexport default MoviesPage;\n\nMoviesPage.propTypes = {\n    search: PropTypes.string,\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        title: PropTypes.string\n    }))\n}"],"names":["axios","API_KEY","fetchPopularMovies","response","data","results","fetchMovieReviews","id","fetchMovieCast","cast","fetchMovieDetails","query","fetchMovieById","Button","styled","SearchBar","onSearch","useState","value","setValue","onSubmit","e","preventDefault","trim","type","onChange","target","StyledLink","NavLink","SearchContainer","MoviesPage","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","Api","then","length","map","title","to","state","from"],"sourceRoot":""}