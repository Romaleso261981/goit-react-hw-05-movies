{"version":3,"file":"static/js/186.e5b225d2.chunk.js","mappings":"6SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADjC,cACzBK,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBG,EAAc,mCAAG,WAAOD,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADpC,cACtBK,EADsB,yBAErBA,EAASC,KAAKK,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAOC,GAAP,uFACRd,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEa,EAAlE,YADQ,cACzBR,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBO,EAAc,mCAAG,WAAOL,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,IAD5B,cACtBK,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD,0GCrBdS,EAAU,SAAC,GAAY,IAAVN,EAAS,EAATA,GACxB,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBX,GAAIY,MAAK,SAACC,GAAD,OAAMJ,EAAWI,EAAjB,GAChC,GAAE,CAACb,KAGF,8BACGQ,EAAQM,OAAS,GAChB,wBACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASjB,EAApB,EAAoBA,GAApB,OACX,yBACE,0BACE,4BACE,qCAAagB,MACb,uBAAIC,UAJDjB,EADE,OAYf,qDAIP,EAED,W","sources":["api/movies-api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport const fetchMovieCast = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport const fetchMovieDetails = async (query) => {\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id) => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const fetchGenres = async () => {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response.data.results;\n}","import { useEffect, useState } from 'react';\nimport * as Api from '../../api/movies-api';\nimport PropTypes from 'prop-types';\n\n\nexport const Reviews = ({ id }) => {\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    Api.fetchMovieReviews(id).then((p) =>setReviews(p));\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <div>\n                <div>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There is no reviews yet!</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n}"],"names":["axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","cast","fetchMovieDetails","query","fetchMovieById","Reviews","useState","reviews","setReviews","useEffect","Api","then","p","length","map","author","content"],"sourceRoot":""}