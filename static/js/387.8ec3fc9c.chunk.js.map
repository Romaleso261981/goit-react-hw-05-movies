{"version":3,"file":"static/js/387.8ec3fc9c.chunk.js","mappings":"sKAAO,IAAMA,EAAmB,iC,6LCEhCC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,EAAIP,GAAX,gFACzBC,EAAU,CAACC,OAAQF,EAAWE,QADL,SAERL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,GAAWG,GAF5C,cAEzBE,EAFyB,yBAGxBA,EAASC,MAHe,2CAAH,wDAMjBI,EAAc,mCAAG,WAAOD,EAAIP,GAAX,gFACtBC,EAAU,CAACC,OAAQF,EAAWE,QADR,SAELL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,GAAWG,GAF/C,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,wDAMdK,EAAiB,mCAAG,WAAOC,EAAOV,GAAd,gFACzBC,EAAU,CAACC,OAAQF,EAAWE,QADL,SAERL,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEY,EAAlE,WAAkFT,GAF1E,cAEzBE,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,2CAAH,wDAMjBM,EAAc,mCAAG,WAAOJ,EAAIP,GAAX,gFACtBC,EAAU,CAACC,OAAQF,EAAWE,QADR,SAELL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,GAAWG,GAFvC,cAEtBE,EAFsB,yBAGrBA,EAASC,MAHY,2CAAH,uD,kJC3BdQ,EAAWC,EAAAA,GAAAA,GAAH,yHAORC,EAAWD,EAAAA,GAAAA,GAAH,8N,SCoCrB,MAtCA,WACE,OAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOX,EAAP,KAAaY,EAAb,KACMC,GAAUC,EAAAA,EAAAA,MAAYD,QAU5B,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMnB,EAAa,IAAIoB,gBAEvB,OADAC,EAAAA,GAAmBJ,EAASjB,GAAYsB,MAAK,SAAAnB,GAAQ,OAAIa,EAAQb,EAASoB,KAArB,IAC9C,WACLvB,EAAWwB,OACZ,CACF,GAAE,CAACP,IAGFb,IACE,SAACQ,EAAD,UACGR,EAAKqB,KAAI,SAAAtB,GACR,OACE,SAACW,EAAD,WACE,4BACE,gBACEY,IACEvB,EAASwB,aAAT,UACO/B,EAAAA,GADP,OAC0BO,EAASwB,cAC/BC,EAENC,IAAK1B,EAAS2B,QAEhB,wBAAK3B,EAAS2B,QACd,uBAAI3B,EAAS4B,gBAXF5B,EAASI,GAe3B,KAIR,C","sources":["api/imageDefaultLink.js","api/movies-api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["export const imageDefaultLink = \"https://image.tmdb.org/t/p/w500\";","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchMovieCast = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchMovieDetails = async (query, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id, controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchGenres = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`, options);\n  return response.data.results;\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-top: 50px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  max-width: 300px;\n  margin-right: 15px;\n  margin-bottom: 25px;\n  > p {\n    font-size: 16px;\n    font-weight: 700;\n  }\n  > img {\n    width: 100%;\n  }\n  > h3 {\n    font-size: 14px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { imageDefaultLink } from '../../api/imageDefaultLink';\nimport * as api from '../../api/movies-api';\nimport placeholderImage from '../../img/portrait_placeholder.png';\nimport { CastList, CastItem } from './Cast.styled';\n\nfunction Cast() {\n  const [data, setData] = useState(null);\n  const movieId = useParams().movieId;\n\n  useEffect(() => {\n    const controller = new AbortController();\n    api.fetchMovieCast(movieId, controller).then(response => setData(response.cast));\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    data && (\n      <CastList>\n        {data.map(response => {\n          return (\n            <CastItem key={response.id}>\n              <div>\n                <img\n                  src={\n                    response.profile_path\n                      ? `${imageDefaultLink}${response.profile_path}`\n                      : placeholderImage\n                  }\n                  alt={response.name}\n                />\n                <h3>{response.name}</h3>\n                <p>{response.character}</p>\n              </div>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    )\n  );\n}\n\nexport default Cast;\n"],"names":["imageDefaultLink","axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","fetchMovieDetails","query","fetchMovieById","CastList","styled","CastItem","useState","setData","movieId","useParams","useEffect","AbortController","api","then","cast","abort","map","src","profile_path","placeholderImage","alt","name","character"],"sourceRoot":""}