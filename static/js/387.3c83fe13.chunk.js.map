{"version":3,"file":"static/js/387.3c83fe13.chunk.js","mappings":"sKAAO,IAAMA,EAAmB,iC,6LCEhCC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADjC,cACzBK,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAc,mCAAG,WAAOD,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADpC,cACtBK,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdK,EAAiB,mCAAG,WAAOC,EAAOV,GAAd,gFAC/BW,QAAQC,IAAI,qBACNX,EAAU,CAACC,OAAQF,EAAWE,QAFL,SAGRL,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEY,EAAlE,WAAkFT,GAH1E,cAGzBE,EAHyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,wDAOjBQ,EAAc,mCAAG,WAAON,EAAIP,GAAX,gFAC5BW,QAAQC,IAAI,kBACNX,EAAU,CAACC,OAAQF,EAAWE,QAFR,SAGLL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,GAAWG,GAHvC,cAGtBE,EAHsB,yBAIrBA,EAASC,MAJY,2CAAH,uD,kJC1BdU,EAAWC,EAAAA,GAAAA,GAAH,yHAORC,EAAWD,EAAAA,GAAAA,GAAH,8N,SCsBrB,MAxBA,WACI,OAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOb,EAAP,KAAac,EAAb,KACIC,GAAUC,EAAAA,EAAAA,MAAYD,QAO1B,OALAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAmBH,GAASI,MAAK,SAACpB,GAAD,OAAce,EAAQf,EAASqB,KAA/B,GAClC,GAAE,CAACL,IAEJR,QAAQC,IAAIR,GACHA,IACL,SAACU,EAAD,UACKV,EAAKqB,KAAI,SAACtB,GACP,OAAO,SAACa,EAAD,WACK,4BACI,gBAAKU,IAAKvB,EAASwB,aAAT,UAA2B/B,EAAAA,GAA3B,OAA8CO,EAASwB,cAAiBC,EAAkBC,IAAK1B,EAAS2B,QAClH,wBAAK3B,EAAS2B,QACd,uBAAI3B,EAAS4B,gBAJP5B,EAASI,GAOlC,KAGZ,C","sources":["api/imageDefaultLink.js","api/movies-api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["export const imageDefaultLink = \"https://image.tmdb.org/t/p/w500\";","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const fetchMovieCast = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport const fetchMovieDetails = async (query, controller) => {\n  console.log(\"fetchMovieDetails\");\n  const options = {signal: controller.signal };\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id, controller) => {\n  console.log(\"fetchMovieById\");\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchGenres = async () => {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response.data.results;\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-top: 50px;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  max-width: 300px;\n  margin-right: 15px;\n  margin-bottom: 25px;\n  > p {\n    font-size: 16px;\n    font-weight: 700;\n  }\n  > img {\n    width: 100%;\n  }\n  > h3 {\n    font-size: 14px;\n  }\n`;\n","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { imageDefaultLink } from '../../api/imageDefaultLink';\nimport * as api from '../../api/movies-api';\nimport placeholderImage from '../../img/portrait_placeholder.png';\nimport { CastList, CastItem } from './Cast.styled'\n\nfunction Cast () {\n    const [data, setData] = useState(null);\n  const movieId = useParams().movieId;\n\n    useEffect(() => {\n      api.fetchMovieCast(movieId).then((response) => setData(response.cast));\n    }, [movieId])\n    \n    console.log(data)\n    return ( data &&\n        <CastList>\n            {data.map((response) => {\n                return <CastItem key={response.id}>\n                            <div>\n                                <img src={response.profile_path ? `${imageDefaultLink}${response.profile_path}` : placeholderImage} alt={response.name} />\n                                <h3>{response.name}</h3>\n                                <p>{response.character}</p>\n                            </div>\n                        </CastItem>\n            })}\n        </CastList>\n        )\n}   \n\nexport default Cast;\n\n  "],"names":["imageDefaultLink","axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","fetchMovieDetails","query","console","log","fetchMovieById","CastList","styled","CastItem","useState","setData","movieId","useParams","useEffect","api","then","cast","map","src","profile_path","placeholderImage","alt","name","character"],"sourceRoot":""}