{"version":3,"file":"static/js/387.e678cd34.chunk.js","mappings":"6SAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAC1BC,EAAU,CAACC,OAAQF,EAAWE,QADJ,SAETL,EAAAA,GAAAA,IAAA,qCAAwCC,GAAWG,GAF1C,cAE1BE,EAF0B,yBAGzBA,EAASC,KAAKC,SAHW,2CAAH,sDAMlBC,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADjC,cACzBK,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,sDAKjBG,EAAc,mCAAG,WAAOD,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,IADpC,cACtBK,EADsB,yBAErBA,EAASC,KAAKK,MAFO,2CAAH,sDAKdC,EAAiB,mCAAG,WAAOC,EAAOX,GAAd,gFAC/BY,QAAQC,IAAI,qBACNZ,EAAU,CAACC,OAAQF,EAAWE,QAFL,SAGRL,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEa,EAAlE,WAAkFV,GAH1E,cAGzBE,EAHyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,wDAOjBS,EAAc,mCAAG,WAAOP,EAAIP,GAAX,gFAC5BY,QAAQC,IAAI,kBACNZ,EAAU,CAACC,OAAQF,EAAWE,QAFR,SAGLL,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,GAAWG,GAHvC,cAGtBE,EAHsB,yBAIrBA,EAASC,MAJY,2CAAH,uD,iJC1BdW,EAAWC,EAAAA,GAAAA,GAAH,oGAMRC,EAAWD,EAAAA,GAAAA,GAAH,yJ,kBCDRE,EAAO,SAAC,GAAY,IAAVX,EAAS,EAATA,GACrB,GAAwBY,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaW,EAAb,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAmBf,GAAIgB,MAAK,SAACC,GAAD,OAAOJ,EAAQI,EAAf,GAC7B,GAAE,CAACjB,KAGF,8BACGE,IACC,SAACM,EAAD,UACGN,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcrB,EAAlC,EAAkCA,GAAlC,OACR,UAACU,EAAD,WACKW,IACC,gBAAKC,IAAG,0CAAqCD,GAAgBE,IAAKJ,KAElEE,IACA,gBAAKC,IAAKE,EAAmBD,IAAKJ,KAElC,uBAAIA,KACJ,uCAAeC,OARNpB,EADP,OAgBnB,EAED,G","sources":["api/movies-api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3290f7c502e8a1167263be702b28bdfc';\n  \nexport const fetchPopularMovies = async (controller) => {\n  const options = {signal: controller.signal };\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieReviews = async (id) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nexport const fetchMovieCast = async (id) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nexport const fetchMovieDetails = async (query, controller) => {\n  console.log(\"fetchMovieDetails\");\n  const options = {signal: controller.signal };\n  const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`, options);\n  return response.data.results;\n}\n\nexport const fetchMovieById = async (id, controller) => {\n  console.log(\"fetchMovieById\");\n  const options = {signal: controller.signal };\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`, options);\n  return response.data;\n}\n\nexport const fetchGenres = async () => {\n  const response = await axios.get(`genre/movie/list?api_key=${API_KEY}`);\n  return response.data.results;\n}","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nexport const CastItem = styled.li`\n  max-width: 300px;\n  margin-right: 15px;\n  margin-bottom: 25px;\n    > p {\n    font-size: 16px;\n    font-weight: 700;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport * as Api from '../../api/movies-api';\nimport { CastList, CastItem} from './Cast.styled';\nimport placeHolderPerson from './../../img/portrait_placeholder.png';\nimport PropTypes from 'prop-types';\n\n\nexport const Cast = ({ id }) => {\n  const [cast, setCast] = useState(null);\n  useEffect(() => {\n    Api.fetchMovieCast(id).then((p) => setCast(p));\n  }, [id]);\n\n  return (\n    <>\n      {cast && (\n        <CastList>\n          {cast.map(({ name, character, profile_path, id }) => (\n            <CastItem key={id}>\n                {profile_path && (\n                  <img src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt={name} />\n                )}\n                {!profile_path && (\n                  <img src={placeHolderPerson} alt={name} />\n                )}\n                  <p>{name}</p>\n                  <p>Character: {character}</p>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n    id: PropTypes.string.isRequired,\n  }\n\n  "],"names":["axios","API_KEY","fetchPopularMovies","controller","options","signal","response","data","results","fetchMovieReviews","id","fetchMovieCast","cast","fetchMovieDetails","query","console","log","fetchMovieById","CastList","styled","CastItem","Cast","useState","setCast","useEffect","Api","then","p","map","name","character","profile_path","src","alt","placeHolderPerson"],"sourceRoot":""}